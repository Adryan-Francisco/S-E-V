@model IEnumerable<SEV.Models.Fornecedor>

@{
    ViewData["Title"] = "Fornecedores";
}

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h1 class="text-primary">
            <i class="bi bi-truck me-2"></i> Fornecedores
        </h1>
        <a asp-action="Create" class="btn btn-success">
            <i class="bi bi-plus-circle"></i> Novo Fornecedor
        </a>
    </div>

    @if (!Model.Any())
    {
        <div class="alert alert-info text-center shadow-sm p-4">
            <i class="bi bi-exclamation-circle me-2"></i> Nenhum fornecedor cadastrado até o momento.
        </div>
    }
    else
    {
        <div class="table-responsive shadow-sm rounded">
            <table class="table table-striped table-hover align-middle">
                <thead class="table-light">
                    <tr>
                        <th>Nome</th>
                        <th>CNPJ</th>
                        <th>Telefone</th>
                        <th>Endereço</th>
                        <th class="text-end">Ações</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>@item.Nome</td>
                            <td>
                                @{
                                    string cnpj = new string(item.CNPJ?.Where(char.IsDigit).ToArray());
                                    string cnpjFormatado = cnpj?.Length == 14
                                    ? Convert.ToUInt64(cnpj).ToString(@"00\.000\.000\/0000\-00")
                                    : item.CNPJ;
                                }
                                @cnpjFormatado
                            </td>
                            <td>
                                @{
                                    string telefone = item.Telefone?.Trim();
                                    string telFormatado = telefone?.Length == 11
                                    ? $"({telefone[..2]}) {telefone.Substring(2, 5)}-{telefone[7..]}"
                                    : telefone?.Length == 10
                                    ? $"({telefone[..2]}) {telefone.Substring(2, 4)}-{telefone[6..]}"
                                    : telefone;
                                }
                                @telFormatado
                            </td>
                            <td>@item.Endereco</td>
                            <td class="text-end">
                                <div class="btn-group" role="group">
                                    <a asp-action="Edit" asp-route-id="@item.FornecedorId"
                                       class="btn btn-sm btn-outline-primary"
                                       title="Editar" data-bs-toggle="tooltip">
                                        <i class="bi bi-pencil-square"></i>
                                    </a>
                                    <a asp-action="Details" asp-route-id="@item.FornecedorId"
                                       class="btn btn-sm btn-outline-info"
                                       title="Detalhes" data-bs-toggle="tooltip">
                                        <i class="bi bi-info-circle"></i>
                                    </a>
                                    <a asp-action="Delete" asp-route-id="@item.FornecedorId"
                                       class="btn btn-sm btn-outline-danger"
                                       title="Excluir" data-bs-toggle="tooltip">
                                        <i class="bi bi-trash"></i>
                                    </a>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
</div>

<!-- Ativar tooltips do Bootstrap -->
<script>
    const tooltips = document.querySelectorAll('[data-bs-toggle="tooltip"]')
    tooltips.forEach(t => new bootstrap.Tooltip(t));
</script>
